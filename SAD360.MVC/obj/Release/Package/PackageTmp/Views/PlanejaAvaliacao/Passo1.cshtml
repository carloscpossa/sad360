@model SAD360.MVC.ViewModels.Passo1PlanejamentoViewModel

@{
    ViewBag.Title = "Planejar Avaliação";
}

<h2>Planejar Avaliação</h2>
<p class="passo">Escolha de Questionário - Passo 1 de 4</p>
@Html.ActionLink("Alterar Avaliações Pendentes", "listaPendentes", "Avaliacao")


@using (Html.BeginForm("Passo1", "PlanejaAvaliacao", FormMethod.Post, new { name = "frmPlanejaAvaliacao1" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.dataInicioPlanejamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataInicioPlanejamento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataInicioPlanejamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dataFimPlanejamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dataFimPlanejamento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dataFimPlanejamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @foreach (var item in Model.questionarios)
            {
                <input type="radio" value="@item.QuestionarioId" name="questionario" /> @item.descricao
                <br />
            }
            @Html.ValidationMessageFor(model => model.questionarios, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">            
            <input type="submit" value="Prosseguir" class="btn btn-default" />            
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
